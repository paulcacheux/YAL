fn main () -> int {
printInt(fact(7)) ;
printInt(factr(7)) ;
return 0 ;
}
// iterative factorial
fn fact (n: int) -> int {
let i:int = 0;
let r:int = 0;
i = 1 ;
r = 1 ;
while (i <= n) {
r = r * i ;
i++ ;
}
return r ;
}
// recursive factorial
fn factr (n: int) -> int {
if (n < 2)
return 1 ;
else
return n * factr(n-1) ;
}
